Index: trunk/src/exif.cpp
===================================================================
--- trunk/src/exif.cpp	(revision 2019)
+++ trunk/src/exif.cpp	(revision 2020)
@@ -75,7 +75,7 @@
         }
 
     private:
-        std::string key_;
+        const std::string& key_;
 
     }; // class FindExifdatumByKey
 
Index: trunk/src/types.cpp
===================================================================
--- trunk/src/types.cpp	(revision 2019)
+++ trunk/src/types.cpp	(revision 2020)
@@ -59,9 +59,15 @@
         const char* name_;                      //!< Name of the type
         long size_;                             //!< Bytes per data entry
         //! Comparison operator for \em typeId
-        bool operator==(Exiv2::TypeId typeId) const;
+        bool operator==(Exiv2::TypeId typeId) const
+        {
+            return typeId_ == typeId;
+        }
         //! Comparison operator for \em name
-        bool operator==(const std::string& name) const;
+        bool operator==(const std::string& name) const
+        {
+            return 0 == strcmp(name_, name.c_str());
+        }
     }; // struct TypeInfoTable
 
     //! Lookup list with information of Exiv2 types
@@ -92,16 +98,6 @@
         { Exiv2::langAlt,          "LangAlt",     1 }
     };
 
-    bool TypeInfoTable::operator==(Exiv2::TypeId typeId) const
-    {
-        return typeId_ == typeId;
-    }
-
-    bool TypeInfoTable::operator==(const std::string& name) const
-    {
-        return std::string(name_) == name;
-    }
-
 }
 
 // *****************************************************************************
Index: trunk/src/tags.cpp
===================================================================
--- trunk/src/tags.cpp	(revision 2019)
+++ trunk/src/tags.cpp	(revision 2020)
@@ -88,9 +88,7 @@
 
     bool IfdInfo::operator==(const Item& item) const
     {
-        const char* i = item.i_.c_str();
-        if (i == 0) return false;
-        return 0 == strcmp(i, item_);
+        return 0 == strcmp(item.i_.c_str(), item_);
     }
 
     // Important: IFD item must be unique!
Index: trunk/src/tiffimage_int.hpp
===================================================================
--- trunk/src/tiffimage_int.hpp	(revision 2019)
+++ trunk/src/tiffimage_int.hpp	(revision 2020)
@@ -32,6 +32,7 @@
 // *****************************************************************************
 // included header files
 #include "tifffwd_int.hpp"
+#include "tiffcomposite_int.hpp"
 #include "image.hpp"
 #include "types.hpp"
 
@@ -141,9 +142,20 @@
              defining the TIFF component used for each tag in a group.
      */
     struct TiffGroupStruct {
-        struct Key;
+        //! Search key for TIFF group structure.
+        struct Key {
+            //! Constructor
+            Key(uint32_t e, uint16_t g) : e_(e), g_(g) {}
+            uint32_t e_;                    //!< Extended tag
+            uint16_t g_;                    //!< %Group
+        };
+
         //! Comparison operator to compare a TiffGroupStruct with a TiffGroupStruct::Key
-        bool operator==(const Key& key) const;
+        bool operator==(const Key& key) const
+        {
+            return    (Tag::all == extendedTag_ || key.e_ == extendedTag_)
+                   && key.g_ == group_;
+        }
         //! Return the tag corresponding to the extended tag
         uint16_t tag() const { return static_cast<uint16_t>(extendedTag_ & 0xffff); }
 
@@ -153,14 +165,6 @@
         NewTiffCompFct newTiffCompFct_; //!< Function to create the correct TIFF component
     };
 
-    //! Search key for TIFF group structure.
-    struct TiffGroupStruct::Key {
-        //! Constructor
-        Key(uint32_t e, uint16_t g) : e_(e), g_(g) {}
-        uint32_t e_;                    //!< Extended tag
-        uint16_t g_;                    //!< %Group
-    };
-
     /*!
       @brief Data structure used as a row of the table which describes TIFF trees.
              Multiple trees are needed as TIFF-based RAW image formats do not always
Index: trunk/src/tiffimage.cpp
===================================================================
--- trunk/src/tiffimage.cpp	(revision 2019)
+++ trunk/src/tiffimage.cpp	(revision 2020)
@@ -1207,12 +1207,6 @@
         return encoderFct;
     }
 
-    bool TiffGroupStruct::operator==(const TiffGroupStruct::Key& key) const
-    {
-        return    (Tag::all == extendedTag_ || key.e_ == extendedTag_)
-               && key.g_ == group_;
-    }
-
     bool TiffTreeStruct::operator==(const TiffTreeStruct::Key& key) const
     {
         return key.r_ == root_ && key.g_ == group_;
